version: "3.7"
services:
  # POSTGRESQL
  database:
    env_file:
      - .env
    build:
      context: ./database
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "45432:5432"
    environment:
      POSTGRES_DB: istsos
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      DATADIR: /var/lib/postgresql/data
      POSTGRES_MULTIPLE_EXTENSIONS: postgis,hstore,postgis_topology,postgis_raster,pgrouting,ltree,pg_cron,uuid-ossp
    command: >
      postgres
      -c custom.hostname="${HOSTNAME}"
      -c custom.versioning="${VERSIONING}"
    volumes:
      # - v-istsos-miu-postgis-sql:/docker-entrypoint-initdb.d
      - v-istsos-miu-database-data:/var/lib/postgresql/data

    healthcheck:
      test: pg_isready -U admin -d istsos
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    volumes:
      - ./fastapi/app:/code/app
    working_dir: /code
    environment:
      DATABASE_URL: postgresql://admin:admin@database:5432/istsos
      HOSTNAME: ${HOSTNAME}
    ports:
      - 8018:5000
    command: uvicorn --reload --workers 1 --host 0.0.0.0 --port 5000 app.main:app

  dummy_data:
    build:
      context: ./dummy_data
      dockerfile: Dockerfile
    volumes:
      - ./dummy_data:/dummy_data
    working_dir: /dummy_data
    command: python3 gen_data.py
    depends_on:
      database:
        condition: service_healthy

volumes:
  v-istsos-miu-postgis-sql:
    name: v-istsos-miu-postgis-sql
  v-istsos-miu-database-data:
    name: v-istsos-miu-database-data
  v-istsos-miu-database-data-test:
    name: v-istsos-miu-database-data-test
  v-istsos-miu-dummy-data:
    name: v-istsos-miu-dummy-data
